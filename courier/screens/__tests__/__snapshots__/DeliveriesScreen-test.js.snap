// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the Deliveries Screen 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "marginHorizontal": 20,
      "marginVertical": 10,
    }
  }
>
  <RCTScrollView
    ListFooterComponent={[Function]}
    ListHeaderComponent={[Function]}
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <Text
          style={
            Object {
              "alignItems": "center",
              "fontSize": 24,
              "width": "100%",
            }
          }
          testID="Deliveries.Title"
        >
          My Deliveries
        </Text>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.12)",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 0,
              "elevation": 0,
              "minWidth": 64,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 4,
                },
              ]
            }
            testID="Delivery.Button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Array [
                      Object {
                        "letterSpacing": 1,
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      undefined,
                      Object {
                        "textTransform": "uppercase",
                      },
                      Object {
                        "color": "rgba(0, 0, 0, 0.32)",
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Sign Out
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
